{"version":3,"sources":["lib/SpritePreview/index.tsx","lib/SpritePreview/utils.ts","assets/sprite.jpg","assets/content.webp","App.tsx","index.tsx"],"names":["SpritePreview","props","children","width","height","spriteOptions","cover","$wrapper","useRef","$cover","$track","$progress","$preview","$content","totalPicNum","rows","cols","baseStyle","previewImgStyle","backgroundImage","src","backgroundSize","onMouseEnter","useCallback","current","style","opacity","onMouseLeave","updateProgress","e","trackElement","progressElement","value","min","max","trackRect","getBoundingClientRect","percentage","pageX","left","progress","updatePreviewPic","previewElement","nthPic","Math","round","curtPicPos","x","y","floor","backgroundPosition","onMouseMove","ref","className","App","sprite","duration","href","target","rel","content","alt","ReactDOM","render","document","getElementById"],"mappings":"qNAqHeA,EAnGwB,SAACC,GAAW,IAC1CC,EAAiDD,EAAjDC,SAAUC,EAAuCF,EAAvCE,MAAOC,EAAgCH,EAAhCG,OAAQC,EAAwBJ,EAAxBI,cAAeC,EAASL,EAATK,MAEzCC,EAAWC,iBAAuB,MAClCC,EAASD,iBAAuB,MAChCE,EAASF,iBAAuB,MAChCG,EAAYH,iBAAuB,MACnCI,EAAWJ,iBAAuB,MAClCK,EAAWL,iBAAuB,MAGlCM,EAAcT,EAAcU,KAAOV,EAAcW,KAEjDC,EAAY,CAChBd,QACAC,UAGIc,EAAe,2BAChBD,GADgB,IAEnBE,gBAAgB,QAAD,OAAUd,EAAce,IAAxB,MACfC,eAAe,GAAD,OAAKlB,EAAQE,EAAcW,KAA3B,cAAqCZ,EAASC,EAAcU,KAA5D,QAIVO,EAAkCC,uBAAY,WAC7Cd,EAAOe,SAAYX,EAASW,UAEjCf,EAAOe,QAAQC,MAAMC,QAAU,IAC/Bb,EAASW,QAAQC,MAAMC,QAAU,OAChC,IAGGC,EAAkCJ,uBAAY,WAC7Cd,EAAOe,SAAYX,EAASW,UAEjCf,EAAOe,QAAQC,MAAMC,QAAU,IAC/Bb,EAASW,QAAQC,MAAMC,QAAU,OAChC,IAGGE,EAAiBL,uBAAY,SAACM,EAAeC,EAA8BC,GAC/E,ICtDmBC,EAAeC,EAAaC,EDsDzCC,EAAYL,EAAaM,wBACzBC,GAAcR,EAAES,MAAQH,EAAUI,MAAQJ,EAAUhC,MACpDqC,GCxDyCN,EDwDF,KCxD1BF,EDwDkB,IAAbK,ICxDUJ,EDwDQ,GCtDnCA,EAELD,EAAQE,EACHA,EAEFF,GDoDL,OAFAD,EAAgBN,MAAMtB,MAAtB,UAAiCqC,EAAjC,KAEOH,IACN,IAGGI,EAAmBlB,uBAAY,SAACc,EAAoBK,GACxD,IAAMC,EAASC,KAAKC,MAAM/B,EAAcuB,GAClCS,EAAa,CACjBC,EAAIJ,EAAStC,EAAcW,KAAQb,EACnC6C,EAAIJ,KAAKK,MAAMN,EAAStC,EAAcW,MAASZ,GAEjDsC,EAAejB,MAAMyB,mBAArB,WAA8CJ,EAAWC,EAAzD,eAAiED,EAAWE,EAA5E,QACC,CAAC5C,EAAQC,EAAcW,KAAMF,EAAaX,IAGvCgD,EAAiD5B,uBAAY,SAACM,GAClE,GAAKtB,EAASiB,SAAYd,EAAOc,SAAYb,EAAUa,SAAYZ,EAASY,QAA5E,CAEA,IAAMa,EAAaT,EAAeC,EAAGnB,EAAOc,QAASb,EAAUa,SAE/DiB,EAAiBJ,EAAYzB,EAASY,YACrC,CAACiB,EAAkBb,IAEtB,OACE,sBAAKwB,IAAK7C,EAAUkB,MAAOR,EACtBoC,UAAU,UACV/B,aAAcA,EACdK,aAAcA,EACdwB,YAAaA,EAJlB,UAME,sBAAKC,IAAK3C,EAAQ4C,UAAU,QAA5B,UAEE,qBAAKA,UAAU,SAAf,SACE,qBAAKD,IAAK1C,EAAQ2C,UAAU,QAA5B,SACE,qBAAKD,IAAKzC,EAAW0C,UAAU,iBAKnC,qBAAKD,IAAKxC,EAAUa,MAAOP,EAAiBmC,UAAU,WAErD/C,GAAS,qBAAK+C,UAAU,eAAf,SAA+B/C,OAI3C,qBAAK8C,IAAKvC,EAAUwC,UAAU,UAA9B,SAEGnD,QE/GM,MAA0B,mCCA1B,MAA0B,qC,MCuC1BoD,MAjCf,WACE,IAGMjD,EAAgB,CACpBU,KAAM,GACNC,KAAM,GACNI,IAAKmC,GAGDjD,EACJ,sBAAM+C,UAAU,MAAhB,sCAGIG,EACJ,sBAAMH,UAAU,WAAhB,mBAKF,OACE,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,CAAelD,MArBL,IAqBmBC,OApBlB,IAoBkCC,cAAeA,EAAeC,MAAOA,EAAlF,SACE,oBAAGmD,KAAK,8CAA8CC,OAAO,SAASC,IAAI,aAA1E,UACE,qBAAKlC,MAAO,CAACtB,MAvBP,IAuBcC,OAtBb,KAsBsBgB,IAAKwC,EAASC,IAAI,YAE/C,iCAASL,YC5BnBM,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.e7940479.chunk.js","sourcesContent":["import * as React from 'react'\nimport {MouseEventHandler, MouseEvent, useCallback, useRef, ReactNode} from 'react'\nimport './styles.scss'\nimport {within} from './utils'\n\ninterface SpriteOptions {\n  rows: number;\n  cols: number;\n  src: string;\n}\n\ninterface Props {\n  width: number;\n  height: number;\n  cover?: ReactNode | string;\n  spriteOptions: SpriteOptions\n}\n\nconst SpritePreview: React.FC<Props> = (props) => {\n  const {children, width, height, spriteOptions, cover} = props\n\n  const $wrapper = useRef<HTMLDivElement>(null)\n  const $cover = useRef<HTMLDivElement>(null)\n  const $track = useRef<HTMLDivElement>(null)\n  const $progress = useRef<HTMLDivElement>(null)\n  const $preview = useRef<HTMLDivElement>(null)\n  const $content = useRef<HTMLDivElement>(null)\n\n  // Calculate how many preview pictures in the sprite pic\n  const totalPicNum = spriteOptions.rows * spriteOptions.cols\n\n  const baseStyle = {\n    width,\n    height,\n  }\n\n  const previewImgStyle = {\n    ...baseStyle,\n    backgroundImage: `url(\"${spriteOptions.src}\")`,\n    backgroundSize: `${width * spriteOptions.cols}px ${height * spriteOptions.rows}px`,\n  }\n\n  // Show cover and hide content\n  const onMouseEnter: MouseEventHandler = useCallback(() => {\n    if (!$cover.current || !$content.current) return\n\n    $cover.current.style.opacity = '1'\n    $content.current.style.opacity = '0'\n  }, [])\n\n  // Show content and hide cover\n  const onMouseLeave: MouseEventHandler = useCallback(() => {\n    if (!$cover.current || !$content.current) return\n\n    $cover.current.style.opacity = '0'\n    $content.current.style.opacity = '1'\n  }, [])\n\n  // Update progress when mouse is hover\n  const updateProgress = useCallback((e: MouseEvent, trackElement: HTMLDivElement, progressElement: HTMLDivElement) => {\n    const trackRect = trackElement.getBoundingClientRect()\n    const percentage = (e.pageX - trackRect.left) / trackRect.width\n    const progress = within(percentage * 100, 0, 100)\n    progressElement.style.width = `${progress}%`\n\n    return percentage\n  }, [])\n\n  // Update preview pic\n  const updatePreviewPic = useCallback((percentage: number, previewElement: HTMLDivElement) => {\n    const nthPic = Math.round(totalPicNum * percentage) // Looking for the curt preview pic\n    const curtPicPos = {\n      x: (nthPic % spriteOptions.cols) * width,\n      y: (Math.floor(nthPic / spriteOptions.cols)) * height\n    }\n    previewElement.style.backgroundPosition = `-${curtPicPos.x}px -${curtPicPos.y}px`\n  }, [height, spriteOptions.cols, totalPicNum, width])\n\n  // Calculate progress and preview pic position of sprite pic\n  const onMouseMove: MouseEventHandler<HTMLDivElement> = useCallback((e) => {\n    if (!$wrapper.current || !$track.current || !$progress.current || !$preview.current) return\n\n    const percentage = updateProgress(e, $track.current, $progress.current)\n\n    updatePreviewPic(percentage, $preview.current)\n  }, [updatePreviewPic, updateProgress])\n\n  return (\n    <div ref={$wrapper} style={baseStyle}\n         className=\"wrapper\"\n         onMouseEnter={onMouseEnter}\n         onMouseLeave={onMouseLeave}\n         onMouseMove={onMouseMove}>\n      {/* The elements that are in the front */}\n      <div ref={$cover} className=\"cover\">\n        {/* Header progress bar*/}\n        <div className=\"header\">\n          <div ref={$track} className=\"track\">\n            <div ref={$progress} className=\"progress\"/>\n          </div>\n        </div>\n\n        {/* Preview: sprite cover */}\n        <div ref={$preview} style={previewImgStyle} className=\"sprite\"/>\n\n        {cover && <div className=\"custom-cover\">{cover}</div>}\n      </div>\n\n      {/* The elements that are in the back */}\n      <div ref={$content} className=\"content\">\n        {/* Content */}\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default SpritePreview\n","/**\n * Get value with [min, max]\n * @param value: Current value\n * @param min: Minimum value\n * @param max: Maximum value\n */\nexport const within = (value: number, min: number, max: number) => {\n  if (value < min) {\n    return min;\n  }\n  if (value > max) {\n    return max;\n  }\n  return value;\n}\n","export default __webpack_public_path__ + \"static/media/sprite.fca037ad.jpg\";","export default __webpack_public_path__ + \"static/media/content.077e402e.webp\";","import React from 'react'\nimport SpritePreview from 'lib/SpritePreview'\nimport sprite from 'assets/sprite.jpg'\nimport content from 'assets/content.webp'\nimport './styles.scss'\n\nfunction App() {\n  const width = 160 * 1.3\n  const height = 90 * 1.3\n\n  const spriteOptions = {\n    rows: 10,\n    cols: 10,\n    src: sprite\n  }\n\n  const cover = (\n    <span className=\"tag\">投稿视频</span>\n  )\n\n  const duration = (\n    <span className=\"duration\">\n      08:00\n    </span>\n  )\n\n  return (\n    <div className=\"App\">\n      <SpritePreview width={width} height={height} spriteOptions={spriteOptions} cover={cover}>\n        <a href=\"https://www.bilibili.com/video/BV1cV411B7RY\" target=\"_blank\" rel=\"noreferrer\">\n          <img style={{width, height}} src={content} alt=\"content\"/>\n\n          <footer>{duration}</footer>\n        </a>\n      </SpritePreview>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}